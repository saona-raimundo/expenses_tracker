function e(e,t,o,n){Object.defineProperty(e,t,{get:o,set:n,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},o={},n={},r=t.parcelRequire6a59;null==r&&((r=function(e){if(e in o)return o[e].exports;if(e in n){var t=n[e];delete n[e];var r={id:e,exports:{}};return o[e]=r,t.call(r.exports,r,r.exports),r.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){n[e]=t},t.parcelRequire6a59=r),r.register("kyEFX",(function(t,o){var n,r;e(t.exports,"register",(function(){return n}),(function(e){return n=e})),e(t.exports,"resolve",(function(){return r}),(function(e){return r=e}));var a={};n=function(e){for(var t=Object.keys(e),o=0;o<t.length;o++)a[t[o]]=e[t[o]]},r=function(e){var t=a[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),r("kyEFX").register(JSON.parse('{"e5iw0":"index.1e4a1f0b.js","8PNQt":"service-worker.js"}')),console.log("[App] Register a Service worker.");var a;a=new URL(r("kyEFX").resolve("8PNQt"),import.meta.url).toString(),"serviceWorker"in navigator?(navigator.serviceWorker.register(a),console.log("[App] Succesfully registered a service worker.")):console.error("[App] The app will not work offline: the browser does not support Service workers."),window.addEventListener("DOMContentLoaded",(e=>{console.log("[App] START Load dynamic content.");const t=document.querySelector("#list"),o=document.querySelector("form"),n=document.querySelector("#datePicker"),r=document.querySelector("#ammount"),a=document.querySelector("#comment"),c=document.querySelector("#image"),l=document.querySelector("#account"),d=document.querySelector("#category");document.querySelector("#submit");let s;console.log("[App] END Initialize app.");const i=window.indexedDB.open("expenses_db",1);function u(){for(console.log("[App] START Empty list.");t.firstChild;)t.removeChild(t.firstChild);const o=s.transaction("expenses_object_store","readonly").objectStore("expenses_object_store").getAll();o.addEventListener("error",(()=>{console.error("[App] Database failed to open."),console.error(e),alert("Database could not open for some reason!")})),o.addEventListener("success",(()=>{const e=o.result;if(!e.length&&!t.firstChild){const e=document.createElement("li");return e.textContent="No entries stored.",void t.appendChild(e)}console.log(e),e.sort((function(e,t){return e.date>t.date?-1:e.date<t.date?1:0})),console.log(e);for(let o=0;o<e.length;o++){const n=e[o];console.log("[App] START Display entry."),console.log(n);const r=document.createElement("li"),a=document.createElement("h2"),c=document.createElement("p"),l=document.createElement("details"),d=document.createElement("summary"),s=document.createElement("p"),i=document.createElement("p"),u=document.createElement("p"),m=document.createElement("p"),g=document.querySelector("option[value="+n.category+"]").textContent;a.textContent=n.date,c.textContent=n.ammount,d.textContent=n.account.toString()+", "+g,s.textContent=n.comment,i.textContent=n.image,u.textContent=n.account,m.textContent=g,l.appendChild(d),l.appendChild(s),l.appendChild(i),l.appendChild(u),l.appendChild(m),r.appendChild(a),r.appendChild(c),r.appendChild(l),t.appendChild(r),r.setAttribute("data-entry-id",n.id);const v=document.createElement("button");r.appendChild(v),v.textContent="Delete",v.setAttribute("class","delete"),v.addEventListener("click",p)}console.log("[App] END Display all entries.")}))}function p(e){const t=Number(e.target.parentNode.getAttribute("data-entry-id"));console.log(`[App] START Delete entry ${t}.`);const o=s.transaction(["expenses_object_store"],"readwrite");o.objectStore("expenses_object_store").delete(t);o.addEventListener("complete",(()=>{e.target.parentNode.parentNode&&(e.target.parentNode.parentNode.removeChild(e.target.parentNode),console.log(`[App] Entry ${t} deleted.`)),u()})),o.onerror=e=>{console.error("[App] Failed to delete an entry!"),console.log(e)}}function m(){console.log("[App] Set today.");const e=new Date;document.getElementById("datePicker").value=e.getFullYear()+"-"+("0"+(e.getMonth()+1)).slice(-2)+"-"+("0"+e.getDate()).slice(-2),console.log("[App] Setted today.")}i.addEventListener("error",(e=>{console.error("[App] Database failed to open."),console.error(e),alert("Database could not open!")})),i.addEventListener("upgradeneeded",(e=>{s=e.target.result,s.onerror=e=>{console.error("[App] Database failed to upgrade."),console.error(e),alert("Database could not upgrade!")};const t=s.createObjectStore("expenses_object_store",{keyPath:"id",autoIncrement:!0});t.createIndex("date","date",{unique:!1}),t.createIndex("ammount","ammount",{unique:!1}),t.createIndex("comment","comment",{unique:!1}),t.createIndex("image","image",{unique:!1}),t.createIndex("account","account",{unique:!1}),t.createIndex("category","category",{unique:!1}),console.log("[App] END Create object store.")})),i.addEventListener("success",(()=>{console.log("[App] END Open database."),s=i.result,u()})),o.addEventListener("submit",(function(e){e.preventDefault(),console.log("[App] START Add new entry to the database.");const t={date:n.value,ammount:r.value,comment:a.value,image:c.value,account:l.value,category:d.value},o=s.transaction(["expenses_object_store"],"readwrite");o.oncomplete=()=>{console.log("[App] END Add entry."),u()},o.onerror=e=>{console.error("[App] Failed to add an entry!"),console.log(e)};const i=o.objectStore("expenses_object_store");i.add(t).addEventListener("success",(()=>{console.log("[App] END Add new entry.");document.querySelector("#reset").click()}))})),m();document.getElementById("reset").addEventListener("click",(e=>{console.log("[App] Reset form."),m(),document.getElementById("ammount").value="",document.getElementById("comment").value="",document.getElementById("image").value="",console.log("[App] Reseted form.")}));document.getElementById("download").addEventListener("click",(e=>{console.log("[App] Download start.");var t=[];s.transaction("expenses_object_store").objectStore("expenses_object_store").openCursor().addEventListener("success",(e=>{const o=e.target.result;if(o){const e={date:o.value.date.toString(),ammount:o.value.ammount.toString(),comment:o.value.comment.toString(),image:o.value.image.toString(),account:o.value.account.toString(),category:o.value.category.toString()};t.push(e),o.continue()}else{console.log("[App] All data was collected.");const e=new Date,o=e.getFullYear()+"-"+("0"+(e.getMonth()+1)).slice(-2)+"-"+("0"+e.getDate()).slice(-2)+"-database.json";!function(e,t,o){var n=new Blob([e],{type:o}),r=document.createElement("a"),a=URL.createObjectURL(n);r.href=a,r.download=t,document.body.appendChild(r),r.click(),setTimeout((function(){document.body.removeChild(r),window.URL.revokeObjectURL(a)}),0)}(JSON.stringify(t),o,"application/json"),console.log("[App] Downloaded data.")}}))}));document.querySelector("#clear").addEventListener("click",(e=>{console.log("[App] Clear database.");document.querySelectorAll(".delete").forEach((e=>{e.click()})),console.log("[App] Cleared database.")}))}));
//# sourceMappingURL=index.1e4a1f0b.js.map
